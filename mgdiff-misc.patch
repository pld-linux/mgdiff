--- Imakefile
+++ Imakefile	1998/11/09 15:54:28
@@ -8,12 +8,14 @@
 XCOMM
 XCOMM for Dell SVR4
 XCOMM
-EXTRA_LIBRARIES = -lc -lucb
+EXTRA_LIBRARIES = -lXpm
 
 SRCS = mgdiff.c rundiff.c misc.c files.c spawn.c manual.c modal.c legend.c
 OBJS = mgdiff.o rundiff.o misc.o files.o spawn.o manual.o modal.o legend.o
 
-LOCAL_LIBRARIES = $(XMLIB) $(XTOOLLIB) $(XMULIBONLY) $(XLIB)
+LOCAL_LIBRARIES = $(XMLIB) $(XTOOLLIB) $(XMULIBONLY) $(XLIB) $(XPLIB)
+INSTPGMFLAGS	= -s
+EXTRA_LOAD_FLAGS = -Wl,-rpath-link,$(SHLIBDIR)
 
 ComplexProgramTarget(mgdiff)
 InstallAppDefaults(Mgdiff)
--- Mgdiff.ad
+++ Mgdiff.ad	1998/11/09 15:54:28
@@ -2,6 +2,8 @@
 ! Mgdiff.ad,v 2.0 1994/05/19 02:01:03 dan Exp
 !
 
+*XmScrollBar*width:       15
+
 !
 ! 				widget hierarchy:
 !
@@ -169,9 +171,11 @@
 !
 ! the overview area
 !
-*sbl.width:				16
-*sbr.width:				16
-*dam.width:				16
+*sbl.width:				15
+*sbl.Background:			lightgreen
+*sbr.width:				15
+*sbr.Background:			lightgreen
+*dam.width:				30
 *dam.Foreground:			black
 *dam.Background:			cyan
 
--- files.c
+++ files.c	1998/11/09 15:54:28
@@ -91,7 +91,7 @@
     (void) close (fd);
 
     for (i = 0; i < bytes; i++)
-	if (!isascii (buffer[i]))
+	if (!isallowed(buffer[i]))
 	    return (0);
     return (1);
 }
--- mgdiff.c
+++ mgdiff.c	1998/11/09 15:56:12
@@ -40,6 +40,7 @@
 #include <assert.h>
 #include <errno.h>
 #include <sys/stat.h>
+#include <locale.h>
 
 #include <X11/Intrinsic.h>
 #include <X11/StringDefs.h>
@@ -109,7 +110,9 @@
 static void unselect_all (void);
 static Boolean all_selected (void);
 static Dimension get_preferred_width (Widget w);
+#if !(defined __GLIBC__ && __GLIBC__ >= 2)
 static char *basename (char *name);
+#endif
 
 #define APP_DEFAULTS_VERSION 1
 
@@ -1020,6 +1023,9 @@
     
     progname = basename (argv[0]);
 
+    XtSetLanguageProc (NULL, NULL, NULL);
+    setlocale (LC_ALL, "");
+    setlocale (LC_CTYPE, "en");
     toplevel = XtVaAppInitialize (&app, "Mgdiff", option_table, XtNumber (option_table),
 #if X11R5
 				  &argc,
@@ -2387,6 +2393,7 @@
 /* 
  * delete any prefix ending in '/' and return a copy
  */
+#if !(defined __GLIBC__ && __GLIBC__ >= 2)
 static char *basename (char *path)
 {
     if (path) {
@@ -2412,3 +2419,4 @@
     else
 	return (NULL);
 }
+#endif
--- mgdiff.h
+++ mgdiff.h	1998/11/09 15:54:28
@@ -86,4 +86,6 @@
  */
 #define X11R5 (defined(XtSpecificationRelease) && (XtSpecificationRelease >= 5))
 
+#define islatin(c)	(isprint((c)) || (((unsigned char)(c)) >= 160) && (((unsigned char)(c)) <= 255))
+#define isallowed(c)	(isascii((c)) || islatin((c)))
 #endif
--- rundiff.c
+++ rundiff.c	1998/11/09 15:54:28
@@ -522,21 +522,22 @@
  */
 static char *duplicate (char *s, int *flag)
 {
-    int len, i, tabs, ctrls;
+    int len, i, tabs, ctrls, latin;
 
     /* 
      * compute length of new string, taking tabs and control 
      * characters into account
      */
     for (i = 0, len = 0, ctrls = tabs = 0; s[i] != '\0'; i++) {
-	if (isascii (s[i])) {
+	latin = islatin(s[i]);
+	if ((isascii(s[i]) || latin)) {
 	    if (s[i] == '\t') {
 		tabs++;
 		len += 8;
 		len /= 8;
 		len *= 8;
 	    }
-	    else if (iscntrl (s[i])) {
+	    else if (!latin && iscntrl (s[i])) {
 		ctrls++;
 		len += 2;
 	    }
@@ -554,13 +555,14 @@
 	int j;
 
 	for (i = 0, j = 0; s[i] != '\0'; i++) {
-	    if (isascii (s[i])) {
+	    latin = islatin(s[i]);
+	    if ((isascii(s[i]) || latin)) {
 		if (s[i] == '\t') {
 		    ret[j++] = ' ';
 		    while ((j % 8) != 0)
 			ret[j++] = ' ';
 		}
-		else if (iscntrl (s[i])) {
+		else if (!latin && iscntrl (s[i])) {
 		    ret[j++] = '^';
 		    ret[j++] = (s[i] + '@') & 0x7f;
 		}
